# РАССЧЕТ ПО ШКАЛЕ КОМЫ ГЛАЗГО. БЕРЕТСЯ ТРИ ПАРАМЕТРА: eye_response, verbal_response, motor_response


# уровень реакции ответ от пользователя клавиатура - kb_eye
# ONE = ('Открывает самопроизвольно, наблюдает')
# TWO = ('Открывает, в ответ на голос')
# THREE = ('Открывает, как реакция на болевое раздражение')
# FOUR = ('Не открывает')

def calculation_Eye_response(eye_response: str) -> int:
    """
    Функция предназначена для оценки реакции пользователя на основе заданного входного параметра.
    Она принимает один аргумент — user, который представляет собой строку, описывающую уровень реакции.
    В зависимости от значения параметра user, функция присваивает переменной points определенное
    количество баллов:

    :param user: Функция принимает строку.
    :return: Функция возвращает значение переменной points int, которое соответствует уровню реакции
    пользователя.
    """
    if eye_response in 'Открывает самопроизвольно, наблюдает':
        return 4
    elif eye_response in 'Открывает, в ответ на голос':
        return 3
    elif eye_response in 'Открывает, как реакция на болевое раздражение':
        return 2
    elif eye_response in 'Не открывает':
        return 1

# total = calculation_Eye_response('Открывает самопроизвольно, наблюдает')
# print(total)


# ответы от пользователя клавиатура - kb_verbal
# ONE = ('Ориентирован и контактен (осмысленный ответ)')
# TWO = ('Произносит фразы, но речь бессвязная')
# THREE = ('Произносит отдельные слова')
# FOUR = ('Издает звуки, но не слова')
# FIVE = ('Отсутствие речи')

def calculation_Verbal_response(verbal_response: str) -> int:
    """
    Определяет уровень вербального ответа на основе предоставленной строки.

    :arg
    verbal_response (str): Описание вербального ответа. Возможные значения:
        - 'Ориентирован и контактен (осмысленный ответ)' (возвращает 5)
        - 'Произносит фразы, но речь бессвязная' (возвращает 4)
        - 'Произносит отдельные слова' (возвращает 3)
        - 'Издает звуки, но не слова' (возвращает 2)
        - 'Отсутствие речи' (возвращает 1)

    :return int: Уровень вербального ответа в виде целого числа.
    """
    if verbal_response in 'Ориентирован и контактен (осмысленный ответ)':
        return 5
    elif verbal_response in 'Произносит фразы, но речь бессвязная':
        return 4
    elif verbal_response in 'Произносит отдельные слова':
        return 3
    elif verbal_response in 'Издает звуки, но не слова':
        return 2
    elif verbal_response in 'Отсутствие речи':
        return 1


# total = calculation_Verbal_response('Отсутствие речи')
# print(total)


# ответы от пользователя клавиатура kb_motor
# ONE = ('Выполнение движений по голосовой команде')
# TWO = ('Локализует боль, пытается её избежать')
# THREE = ('Бессмысленные движения в ответ на боль')
# FOUR = ('Патологическое сгибание в ответ на боль (декортикационная ригидность)')
# FIVE = ('Патологическое разгибание в ответ на боль (децеребрационная ригидность)')
# SIX = ('Не двигается')


def calculation_Motor_response(motor_response: str) -> int:
    """
    Определяет уровень моторного ответа на основе предоставленной строки от пользователя.

    :arg
    motor_response (str): Описание моторного ответа. Возможные значения:
        - 'Выполнение движений по голосовой команде' (возвращает 6)
        - 'Локализует боль, пытается её избежать' (возвращает 5)
        - 'Бессмысленные движения в ответ на боль' (возвращает 4)
        - 'Патологическое сгибание в ответ на боль (декортикационная ригидность)' (возвращает 3)
        - 'Патологическое разгибание в ответ на боль (децеребрационная ригидность)' (возвращает 2)
        - 'Не двигается' (возвращает 1)

    :return int: Уровень моторного ответа в виде целого числа.
    """
    if motor_response in 'Выполнение движений по голосовой команде':
        return 6
    elif motor_response in 'Локализует боль, пытается её избежать':
        return 5
    elif motor_response in 'Бессмысленные движения в ответ на боль':
        return 4
    elif motor_response in 'Патологическое сгибание в ответ на боль (декортикационная ригидность)':
        return 3
    elif motor_response in 'Патологическое разгибание в ответ на боль (децеребрационная ригидность)':
        return 2
    elif motor_response in 'Не двигается':
        return 1


# total = calculation_Motor_response('Патологическое разгибание в ответ на боль (децеребрационная ригидность)')
# print(total)


def final_calculation_EyeVerbalMotor(eye_response: int, verbal_response: int, motor_response: int) -> int:
    """
    Вычисляет общий результат на основе глазного (eye_response), вербального (verbal_response)
     и моторного ответов (motor_response).

    :argument
    eye_response (int): Оценка глазного ответа (от 1 до 4).
    verbal_response (int): Оценка вербального ответа (от 1 до 5).
    motor_response (int): Оценка моторного ответа (от 1 до 6).

    :return int - Сумма всех трех ответов, представляющая общий результат.
    """
    total = int(eye_response + verbal_response + motor_response)
    return total


# total = print_result('Произвольное', 'Отсутствие речи', 'Патологическое разгибание в ответ на боль (
# децеребрационная ригидность)') print(total)
